(function($,window,document,undefined){var ClockViewController={$clock:undefined,time:undefined,delegate:undefined,isPaused:true,isReset:true,queue:0,config:{decimal:1,startTime:10,interval:100},init:function(elem,options){var defaults=this.config;this.config=$.extend({},defaults,options);var timeFraction=this.config.interval<1e3?1e3/this.config.interval:1;this.config.decimal=Math.round(Math.log(timeFraction)/Math.LN10);this.$clock=$(elem);this.setStartTime();this.bindEvents()},start:function(){this.isPaused=false;this.isReset=false;if(this.queue<=0){this.countDown()}},pause:function(){this.isPaused=true},reset:function(){this.isPaused=true;this.isReset=true;this.time=this.config.startTime;this.syncTimeClock()},countDown:function(){this.syncTimeClock();if(this.time<=0){this.delegate.clockViewControllerDidReachEndOfCounting();return}var self=this;self.queue+=1;setTimeout(function(){self.queue-=1;if(self.isPaused){return}self.time-=self.config.interval/1e3;self.countDown()},this.config.interval)},bindEvents:function(){var self=this;this.$clock.on("focus",function(){this.setSelectionRange(0,9999);$(this).on("change",function(){if(self.isReset){self.setStartTime()}else{self.syncTimeClock()}})}).mouseup(function(event){event.preventDefault()});this.$clock.on("blur",function(){$(this).off("change")})},syncTimeClock:function(){this.time=parseFloat(this.time).toFixed(this.config.decimal);this.$clock.val(this.time)},setStartTime:function(){var time=parseFloat(this.$clock.val());this.time=!isNaN(time)&&time>0?time:this.config.startTime;this.syncTimeClock();this.config.startTime=this.time}};var PanelViewController={startBtn:undefined,resetBtn:undefined,loopSwitch:undefined,delegate:undefined,init:function(elem){this.$elem=$(elem);this.$startBtn=this.$elem.find("#start");this.$resetBtn=this.$elem.find("#reset");this.$loopSwitch=this.$elem.find("#loop");this.resetButtons();this.bindEvents()},bindEvents:function(){var self=this,$startBtnLabel=this.$startBtn.find(".ui-btn-text");this.$startBtn.on("click",function(){switch($startBtnLabel.text()){case"Pause":$startBtnLabel.text("Start");self.delegate.panelViewControllerDidClickPause();break;case"Start":default:$startBtnLabel.text("Pause");self.delegate.panelViewControllerDidClickStart();break}});this.$resetBtn.on("click",function(){self.delegate.panelViewControllerDidClickReset()});this.$loopSwitch.on("change",function(){self.delegate.panelViewControllerDidSwitchLoop($(this).val()==="on")})},resetButtons:function(){this.$startBtn.find(".ui-btn-text").text("Start");this.$resetBtn.find(".ui-btn-text").text("Reset")}};var TimerAppController={clockViewControllers:[],currentClockViewController:undefined,panelViewController:undefined,shouldLoop:false,init:function(elem,options){this.$elem=$(elem);if(!$.isArray(options)){options=$.makeArray(options)}var self=this;this.$elem.find(".clock").each(function(index,element){var clockVC=Object.create(ClockViewController);clockVC.init(element,options[index]);clockVC.delegate=self;self.clockViewControllers.push(clockVC)});this.currentClockViewController=this.clockViewControllers[0];this.panelViewController=Object.create(PanelViewController);this.panelViewController.init(elem);this.panelViewController.delegate=this},resetAllClockViewControllers:function(){var i,len=this.clockViewControllers.length;for(i=0;i<len;i++){this.clockViewControllers[i].reset()}},panelViewControllerDidClickStart:function(){this.currentClockViewController.start()},panelViewControllerDidClickPause:function(){this.currentClockViewController.pause()},panelViewControllerDidClickReset:function(){this.currentClockViewController=this.clockViewControllers[0];this.resetAllClockViewControllers();this.panelViewController.resetButtons()},panelViewControllerDidSwitchLoop:function(switched){this.shouldLoop=switched},clockViewControllerDidReachEndOfCounting:function(){var index=this.clockViewControllers.indexOf(this.currentClockViewController);if(index<this.clockViewControllers.length-1){this.currentClockViewController=this.clockViewControllers[index+1];this.currentClockViewController.start()}else if(this.shouldLoop){this.resetAllClockViewControllers();this.currentClockViewController=this.clockViewControllers[0];this.currentClockViewController.start()}else{this.panelViewController.resetButtons()}}};window.TimerAppController=TimerAppController})(jQuery,window,document);
